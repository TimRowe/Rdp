<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddToPreview" xml:space="preserve">
    <value>添加到預覽</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>申請</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="CancelApply" xml:space="preserve">
    <value>取消申請</value>
  </data>
  <data name="Cancellation" xml:space="preserve">
    <value>註銷</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>選擇</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>清空</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>關閉</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>確定</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>創建</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>詳細</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>匯出EXCEL</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>篩選</value>
  </data>
  <data name="Finish" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="GetVerificationCode" xml:space="preserve">
    <value>獲取驗證碼</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>隱藏</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>導入</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>首頁</value>
  </data>
  <data name="Lock" xml:space="preserve">
    <value>鎖定窗口</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>退出系統</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>下一步</value>
  </data>
  <data name="Operator" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>預覽</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>列印</value>
  </data>
  <data name="PrintPreview" xml:space="preserve">
    <value>預覽列印</value>
  </data>
  <data name="Query" xml:space="preserve">
    <value>查詢</value>
  </data>
  <data name="ReFilter" xml:space="preserve">
    <value>重置篩選</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="ReGet" xml:space="preserve">
    <value>重新獲取</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>重置</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>返回</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>登    錄</value>
  </data>
  <data name="Unlock" xml:space="preserve">
    <value>解鎖</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>修改</value>
  </data>
  <data name="ViewCondition" xml:space="preserve">
    <value>顯示查詢準則</value>
  </data>
  <data name="BatchAdd" xml:space="preserve">
    <value>批量創建</value>
  </data>
  <data name="Assign" xml:space="preserve">
    <value>分配許可權</value>
  </data>
  <data name="More" xml:space="preserve">
    <value>更多</value>
  </data>
  <data name="WriteCard" xml:space="preserve">
    <value>寫卡</value>
  </data>
  <data name="Operate" xml:space="preserve">
    <value>確定操作</value>
  </data>
  <data name="Validate" xml:space="preserve">
    <value>驗證操作</value>
  </data>
  <data name="ModifyPassword" xml:space="preserve">
    <value>修改密碼</value>
  </data>
  <data name="Matching" xml:space="preserve">
    <value>分配</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>核對</value>
  </data>
  <data name="Issued" xml:space="preserve">
    <value>發出</value>
  </data>
  <data name="Sale" xml:space="preserve">
    <value>銷售</value>
  </data>
  <data name="Used" xml:space="preserve">
    <value>使用</value>
  </data>
  <data name="Refund" xml:space="preserve">
    <value>退款</value>
  </data>
  <data name="SureReceive" xml:space="preserve">
    <value>確認收入</value>
  </data>
  <data name="PageSetting" xml:space="preserve">
    <value>頁面設置</value>
  </data>
  <data name="SalesOrderPrint" xml:space="preserve">
    <value>幸福禮金卡銷售單打印</value>
  </data>
  <data name="Delay" xml:space="preserve">
    <value>延期</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>重試</value>
  </data>
  <data name="CancelOrder" xml:space="preserve">
    <value>取消單據</value>
  </data>
  <data name="RepeatAdd" xml:space="preserve">
    <value>重複添加</value>
  </data>
  <data name="SureExchange" xml:space="preserve">
    <value>確認分配</value>
  </data>
  <data name="String" xml:space="preserve">
    <value>獎賞</value>
  </data>
  <data name="SalesOrderReprint" xml:space="preserve">
    <value>銷售單重印</value>
  </data>
</root>