<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountError" xml:space="preserve">
    <value>Account Error</value>
  </data>
  <data name="CardLevelLimit" xml:space="preserve">
    <value>Card level need to be gold or above level</value>
  </data>
  <data name="CardRecordInvaliable" xml:space="preserve">
    <value>Card Record Invaliable</value>
  </data>
  <data name="Domain2" xml:space="preserve">
    <value>China</value>
  </data>
  <data name="DoNotUse" xml:space="preserve">
    <value>There are gift certificate cannot be used</value>
  </data>
  <data name="ExpiredPassword" xml:space="preserve">
    <value>ExpiredPassword</value>
  </data>
  <data name="IsSureToAdd" xml:space="preserve">
    <value>Will not be changed after adding will sure to add?</value>
  </data>
  <data name="NoRight" xml:space="preserve">
    <value>No license to operate</value>
  </data>
  <data name="PasswordError" xml:space="preserve">
    <value>Password Error</value>
  </data>
  <data name="SettingNotRepeatable" xml:space="preserve">
    <value>Setting Not Repeatable</value>
  </data>
  <data name="SiteTips" xml:space="preserve">
    <value>You do not have permission of this site!</value>
  </data>
  <data name="UseIE" xml:space="preserve">
    <value>Please use the IE browser</value>
  </data>
  <data name="DoNotSales" xml:space="preserve">
    <value>Do Not Sales</value>
  </data>
  <data name="NoInCurrentBranch" xml:space="preserve">
    <value>No In Current Branch</value>
  </data>
  <data name="OnlyCustomerTips" xml:space="preserve">
    <value>Input data should belong to the same customer！</value>
  </data>
  <data name="Saled" xml:space="preserve">
    <value>Saled</value>
  </data>
  <data name="Used" xml:space="preserve">
    <value>Used</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="Expired" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="PleaseInputRange" xml:space="preserve">
    <value>Please input the Range</value>
  </data>
  <data name="PleaseExportErrorExcel" xml:space="preserve">
    <value>Please Export the Error Excel</value>
  </data>
  <data name="IsMember" xml:space="preserve">
    <value>Is Member</value>
  </data>
  <data name="IsSureToCancelSale" xml:space="preserve">
    <value>Is sure to cancel sale?</value>
  </data>
  <data name="IsSureToCancelReturn" xml:space="preserve">
    <value>Is sure to cancel return?</value>
  </data>
  <data name="TransferCouponNum" xml:space="preserve">
    <value>Transfer coupon number</value>
  </data>
  <data name="BranchNoExist" xml:space="preserve">
    <value>The Branch does not exist</value>
  </data>
  <data name="ErrorMsg" xml:space="preserve">
    <value>Error Message</value>
  </data>
  <data name="ErrorNo" xml:space="preserve">
    <value>Error No</value>
  </data>
  <data name="PleaseChoose" xml:space="preserve">
    <value>Please Choose</value>
  </data>
  <data name="Desc" xml:space="preserve">
    <value>desc</value>
  </data>
  <data name="Registered" xml:space="preserve">
    <value>Registered</value>
  </data>
  <data name="WrongFormat" xml:space="preserve">
    <value>Wrong Format</value>
  </data>
  <data name="RandomLengthLimit3" xml:space="preserve">
    <value>Random code is limited to maximum 3</value>
  </data>
  <data name="SaleOrderNoLength20" xml:space="preserve">
    <value>Sales order No from 0 to 20 significant digits</value>
  </data>
  <data name="PleaseEnterValidAmount" xml:space="preserve">
    <value>Please enter a valid amount</value>
  </data>
  <data name="PleaseEnterNum" xml:space="preserve">
    <value>Please Enter Numeber</value>
  </data>
  <data name="VerificationCodeLengthLimit4" xml:space="preserve">
    <value>Verification Code is limited to maximum 4</value>
  </data>
  <data name="Part" xml:space="preserve">
    <value>Part</value>
  </data>
  <data name="IsSureToDelete" xml:space="preserve">
    <value>Is Sure To Delete？</value>
  </data>
  <data name="InformationCheck" xml:space="preserve">
    <value>Information Check</value>
  </data>
  <data name="VerificationCodeCheck" xml:space="preserve">
    <value>Check Verification Code</value>
  </data>
  <data name="Rows" xml:space="preserve">
    <value>Rows</value>
  </data>
  <data name="OperationResult" xml:space="preserve">
    <value>Operation Result</value>
  </data>
  <data name="PleaseChooseFile" xml:space="preserve">
    <value>Please Choose the File</value>
  </data>
  <data name="Scan" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="ImportFileNotNull" xml:space="preserve">
    <value>Import File Not Null</value>
  </data>
  <data name="PleaseEnter" xml:space="preserve">
    <value>Please Enter</value>
  </data>
  <data name="Coupon" xml:space="preserve">
    <value>Coupon</value>
  </data>
  <data name="CouponNotInCurrentBranch" xml:space="preserve">
    <value>Coupon Not In Current Branch</value>
  </data>
  <data name="Exist" xml:space="preserve">
    <value>Exist</value>
  </data>
  <data name="Form" xml:space="preserve">
    <value>Form</value>
  </data>
  <data name="Invaliable" xml:space="preserve">
    <value>Invaliable</value>
  </data>
  <data name="MoreThan" xml:space="preserve">
    <value>More Than</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="Please" xml:space="preserve">
    <value>Please</value>
  </data>
  <data name="SalesOrderUnDistributionOrExcess" xml:space="preserve">
    <value>Sales Orders are not allocated vouchers or allocated excess</value>
  </data>
  <data name="RedirectUrl" xml:space="preserve">
    <value>Redirect to the specified page</value>
  </data>
  <data name="Later" xml:space="preserve">
    <value>later</value>
  </data>
  <data name="BeginTimeNotDelayAndEndTimeNotAhead" xml:space="preserve">
    <value>Begin Time Cant Not Delay，End Time Cant Not Ahead</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="OldValue" xml:space="preserve">
    <value>Old Value</value>
  </data>
  <data name="IncreaseStock" xml:space="preserve">
    <value>Increase Stock</value>
  </data>
  <data name="ShelvesQrcode" xml:space="preserve">
    <value>Qrcode Of Shelves</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>Range</value>
  </data>
  <data name="NotSales" xml:space="preserve">
    <value>Don't Sales.</value>
  </data>
  <data name="SalesOrderPrint" xml:space="preserve">
    <value>Sales Order Print</value>
  </data>
  <data name="ReadCardVerification" xml:space="preserve">
    <value>Read Card Verification</value>
  </data>
  <data name="UserCodeVerification" xml:space="preserve">
    <value>User Code Verification</value>
  </data>
  <data name="UserPasswordVerification" xml:space="preserve">
    <value>User Password Verification</value>
  </data>
  <data name="CouponNumFormat" xml:space="preserve">
    <value>Letters (2 digits or more) + numbers</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="Valid" xml:space="preserve">
    <value>Valiable</value>
  </data>
  <data name="ImportFileNotExistNullValue" xml:space="preserve">
    <value>Import File Not Exist Null Value</value>
  </data>
</root>